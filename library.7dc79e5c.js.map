{"mappings":"sgBAAA,IAAAA,EAAAC,EAAA,S,oFAQA,EAAAC,EAAAC,WAOA,MAGMC,EAAaC,SAASC,cAAc,iCACpCC,EAAWF,SAASC,cAAc,+BAClCE,EAAYH,SAASC,cAAc,uBACnCG,EAAcJ,SAASC,cAAc,cAErCI,GAAW,EAAAV,EAAAW,kBARH,YASRC,GAAa,EAAAZ,EAAAW,kBARL,cAyCd,SAASE,EAAcC,GACrB,GAAIA,SAAgE,IAAnBA,EAAQC,OAIvD,OAiCJ,WACE,MAAMC,EAAS,4OAMfR,EAAUS,mBAAmB,aAAcD,E,CA1CuBE,QAChEC,QAAQC,IAAI,yCAMd,MAAMC,EAAsBP,EACzBQ,KAAIC,IACH,MAAMC,EAAaD,EAAME,MACnBC,EAAc,kCAAkCH,EAAMI,cACtDC,EAAmBL,EAAMM,aAC5BC,MAAM,IACNC,MAAM,EAAG,GACTC,KAAK,IACFC,EA8BZ,SAAmBC,GACjB,MAAMC,EAASD,EAAIZ,KAAIc,GACPA,EAAGC,OAGnB,GAAsB,IAAlBF,EAAOpB,OACT,MAAO,CAAC,WAENoB,EAAOpB,QAAU,GACnBoB,EAAOG,OAAO,EAAG,GAAI,SAEvB,OAAOH,EAAOH,KAAK,K,CAzCKO,CAAUhB,EAAMY,QAWpC,MAPoB,WAHJZ,EAAMa,yCAGuDV,WAAqBF,6FAC/DA,0FACwCS,+CAAyDL,8CAJhHL,EAAMiB,aAImLC,QAC3M,2BAIgB,IAEnBT,KAAK,IAIRvB,EAAYQ,mBAAmB,YAAaI,E,CAhE9CjB,EAAWsC,iBAAiB,SAa5B,WACEtC,EAAWuC,UAAUC,IAAI,cACzBrC,EAASoC,UAAUE,OAAO,cAC1BrC,EAAUsC,UAAY,GACtBrC,EAAYqC,UAAY,GACxBjC,EAAcD,E,IAjBhBL,EAASmC,iBAAiB,SAoB1B,WACEtC,EAAWuC,UAAUE,OAAO,cAC5BtC,EAASoC,UAAUC,IAAI,cACvBpC,EAAUsC,UAAY,GACtBrC,EAAYqC,UAAY,GACxBjC,EAAcH,E,IAvBZH,EAASoC,UAAUI,SAAS,cAC9BlC,EAAcH,GAIhBG,EAAcD,E","sources":["src/js/library.js"],"sourcesContent":["import {\n  saveLocalStorage,\n  loadLocalStorage,\n  removeLocalStorage,\n} from './localStorage';\nimport './theme';\nimport getMoviesApi from './getMoviesApi';\nimport { mobMenu } from './mobile-menu';\nmobMenu();\n\nimport './Utils/auth';\nimport './footerModal';\nimport './modalMovieMarkup';\nimport './getfullMovieInfo';\n\nconst KEY_Q = 'queueKey';\nconst KEY_W = 'watchedKey';\n\nconst watchedBtn = document.querySelector('button[data-action=\"watched\"]');\nconst queueBtn = document.querySelector('button[data-action=\"queue\"]');\nconst myLibrary = document.querySelector('.library__container');\nconst labraryList = document.querySelector('.film_list');\n\nconst queueKey = loadLocalStorage(KEY_Q);\nconst watchedKey = loadLocalStorage(KEY_W);\n\n// console.log(queueKey);\n\nwatchedBtn.addEventListener('click', handleRenderWatchedClick);\nqueueBtn.addEventListener('click', handleRenderQueueClick);\n\nif (queueBtn.classList.contains('js-current')) {\n  libraryMarkup(queueKey);\n  return;\n}\n\nlibraryMarkup(watchedKey);\n\n// ===================================\n// FUNCTION\n\nfunction handleRenderWatchedClick() {\n  watchedBtn.classList.add('js-current');\n  queueBtn.classList.remove('js-current');\n  myLibrary.innerHTML = '';\n  labraryList.innerHTML = '';\n  libraryMarkup(watchedKey);\n}\n\nfunction handleRenderQueueClick() {\n  watchedBtn.classList.remove('js-current');\n  queueBtn.classList.add('js-current');\n  myLibrary.innerHTML = '';\n  labraryList.innerHTML = '';\n  libraryMarkup(queueKey);\n}\n\nfunction libraryMarkup(nameKey) {\n  if (nameKey === null || nameKey === undefined || nameKey.length === 0) {\n    // Тут должна быть заглушка для MyLibrary - картинка или текст, что фильмов в библиотеке нет\n    libraryEmptyMarkup();\n    console.log('Поставлена инфо что библиотека пустая');\n    return;\n  }\n\n  // const elementUl = '';\n  // myLibrary.insertAdjacentHTML('beforeend', elementUl);\n  const markupLibraryMovies = nameKey\n    .map(movie => {\n      const movieTitle = movie.title;\n      const moviePoster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n      const movieReleaseDate = movie.release_date\n        .split('')\n        .slice(0, 4)\n        .join('');\n      const movieGenres = getGenres(movie.genres);\n      const movieId = movie.id;\n      const voteAverage = movie.vote_average;\n\n      const movieMarkup = `<li id=\"${movieId}\" class=\"film-list__item\"><img src=\"${moviePoster}\" alt=\"${movieTitle}\" class=\"film-list__item-poster\" loading=\"lazy\">\n     <h3 class=\"film-list__item-title\">${movieTitle}</h3>\n     <div class=\"film-list__item-details\"><span class=\"film-list__item-genres\">${movieGenres}</span>|<span class=\"film-list__item-year\">${movieReleaseDate}</span><span class=\"film-list__item-vote\">${voteAverage.toFixed(\n        1\n      )}</span></div>\n   </li>`;\n\n      return movieMarkup;\n    })\n    .join('');\n\n  // console.log(markupLibraryMovies);\n\n  labraryList.insertAdjacentHTML('beforeend', markupLibraryMovies);\n}\n\nfunction libraryEmptyMarkup() {\n  const markup = `<h2 class=\"library-empty__title\">\n          Your movie library to watch is empty\n        </h2>\n        <div class=\"library-empty__tumb\">\n          <a href=\"./index.html\" class=\"library-empty__btn\">CHOOSE MOVIE</a>\n        </div>`;\n  myLibrary.insertAdjacentHTML('afterbegin', markup);\n}\n\nfunction getGenres(ids) {\n  const genres = ids.map(id => {\n    const genre = id.name;\n    return genre;\n  });\n  if (genres.length === 0) {\n    return ['Unknown'];\n  }\n  if (genres.length >= 4) {\n    genres.splice(2, 10, 'Other');\n  }\n  return genres.join(', ');\n}\n"],"names":["$31u3U","parcelRequire","$8FnLx","mobMenu","watchedBtn","document","querySelector","queueBtn","myLibrary","labraryList","queueKey","loadLocalStorage","watchedKey","libraryMarkup","nameKey","length","markup","insertAdjacentHTML","libraryEmptyMarkup","console","log","markupLibraryMovies","map","movie","movieTitle","title","moviePoster","poster_path","movieReleaseDate","release_date","split","slice","join","movieGenres","ids","genres","id","name","splice","getGenres","vote_average","toFixed","addEventListener","classList","add","remove","innerHTML","contains"],"version":3,"file":"library.7dc79e5c.js.map"}